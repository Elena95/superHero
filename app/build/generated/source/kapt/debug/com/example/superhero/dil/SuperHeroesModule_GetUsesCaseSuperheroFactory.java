// Generated by Dagger (https://dagger.dev).
package com.example.superhero.dil;

import com.example.superhero.data.entities.usecase.GetSuperHeroUseCase;
import com.example.superhero.repository.Repository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SuperHeroesModule_GetUsesCaseSuperheroFactory implements Factory<GetSuperHeroUseCase> {
  private final Provider<Repository> repositoryProvider;

  public SuperHeroesModule_GetUsesCaseSuperheroFactory(Provider<Repository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public GetSuperHeroUseCase get() {
    return getUsesCaseSuperhero(repositoryProvider.get());
  }

  public static SuperHeroesModule_GetUsesCaseSuperheroFactory create(
      Provider<Repository> repositoryProvider) {
    return new SuperHeroesModule_GetUsesCaseSuperheroFactory(repositoryProvider);
  }

  public static GetSuperHeroUseCase getUsesCaseSuperhero(Repository repository) {
    return Preconditions.checkNotNullFromProvides(SuperHeroesModule.INSTANCE.getUsesCaseSuperhero(repository));
  }
}
