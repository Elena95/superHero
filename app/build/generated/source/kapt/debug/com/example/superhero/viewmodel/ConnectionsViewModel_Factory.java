// Generated by Dagger (https://dagger.dev).
package com.example.superhero.viewmodel;

import com.example.superhero.data.entities.usecase.GetConnectionsUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ConnectionsViewModel_Factory implements Factory<ConnectionsViewModel> {
  private final Provider<GetConnectionsUseCase> getConnectionsUseCaseProvider;

  public ConnectionsViewModel_Factory(
      Provider<GetConnectionsUseCase> getConnectionsUseCaseProvider) {
    this.getConnectionsUseCaseProvider = getConnectionsUseCaseProvider;
  }

  @Override
  public ConnectionsViewModel get() {
    return newInstance(getConnectionsUseCaseProvider.get());
  }

  public static ConnectionsViewModel_Factory create(
      Provider<GetConnectionsUseCase> getConnectionsUseCaseProvider) {
    return new ConnectionsViewModel_Factory(getConnectionsUseCaseProvider);
  }

  public static ConnectionsViewModel newInstance(GetConnectionsUseCase getConnectionsUseCase) {
    return new ConnectionsViewModel(getConnectionsUseCase);
  }
}
