// Generated by Dagger (https://dagger.dev).
package com.example.superhero.dil;

import com.example.superhero.network.SuperHeroService;
import com.example.superhero.repository.Repository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SuperHeroesModule_GetRepositoryFactory implements Factory<Repository> {
  private final Provider<SuperHeroService> superheroServiceProvider;

  public SuperHeroesModule_GetRepositoryFactory(
      Provider<SuperHeroService> superheroServiceProvider) {
    this.superheroServiceProvider = superheroServiceProvider;
  }

  @Override
  public Repository get() {
    return getRepository(superheroServiceProvider.get());
  }

  public static SuperHeroesModule_GetRepositoryFactory create(
      Provider<SuperHeroService> superheroServiceProvider) {
    return new SuperHeroesModule_GetRepositoryFactory(superheroServiceProvider);
  }

  public static Repository getRepository(SuperHeroService superheroService) {
    return Preconditions.checkNotNullFromProvides(SuperHeroesModule.INSTANCE.getRepository(superheroService));
  }
}
