// Generated by Dagger (https://dagger.dev).
package com.example.superhero.viewmodel;

import com.example.superhero.data.entities.usecase.GetBiographyUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BiographyViewModel_Factory implements Factory<BiographyViewModel> {
  private final Provider<GetBiographyUseCase> getBiographyUseCaseProvider;

  public BiographyViewModel_Factory(Provider<GetBiographyUseCase> getBiographyUseCaseProvider) {
    this.getBiographyUseCaseProvider = getBiographyUseCaseProvider;
  }

  @Override
  public BiographyViewModel get() {
    return newInstance(getBiographyUseCaseProvider.get());
  }

  public static BiographyViewModel_Factory create(
      Provider<GetBiographyUseCase> getBiographyUseCaseProvider) {
    return new BiographyViewModel_Factory(getBiographyUseCaseProvider);
  }

  public static BiographyViewModel newInstance(GetBiographyUseCase getBiographyUseCase) {
    return new BiographyViewModel(getBiographyUseCase);
  }
}
